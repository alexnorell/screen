name: Python Checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint module source files
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pylint
        if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      run: |
        find ./src/ -name "*.py" -exec pylint '{}' +
  build:
    name: Build python modules
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi
    - name: Build
      run: |
        python3 setup.py sdist bdist_wheel
  test:
    name: Test python modules
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pytest pylint pylint-pytest
        if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi
    - name: Install modules
      run: |
        python3 -m pip install .
    - name: Lint tests
      run: |
        find ./tests/ -name "*.py" -exec pylint --load-plugins pylint_pytest '{}' +
    - name: Test
      run: |
        pytest